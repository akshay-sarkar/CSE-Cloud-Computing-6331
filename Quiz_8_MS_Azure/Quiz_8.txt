Quiz Q8, Summer 2017   (c) DL, UTA, 2017

 Please read this:
  I understand that I am on my honor during this quiz, I will not collaborate, 
  use non-allowed sources, and I will not discuss this quiz with anyone for 
  the next 4 hours. In submitting this quiz, I agree to this honor code.
  Please initial here:____________________

  C&P means copy and paste only those relevant lines from your program(s) into this quiz.
  You may include lines of code, HTML, CSS, or any "textual" artifact (no libraries, executables, utilities,
  pictures, diagrams, songs, or video, please)

  NOTE: Please submit on time, late submissions will have points deducted!
        Please submit to Blackboard - IF unavailable, email to class account. 

  Due to technical logistics, we can not look at any demo (the "show us" part) in the last 5 minutes of the quiz. 

  The icon "--->" means that you should place an answer at this location in the quiz, either textual, pieces of code 
    (or HTML,XML,CSS or similar), or numeric results.

 1. Good luck!

 2. Get all files from this same folder.
    
 3. Rename this quiz and your programs with your name and last digits of your ID.

 4. For each of the following parts, please implement, cut and paste the relevant code (no binaries,
    libraries, etc, just source code and any textual configuration files, html, and similar) into this file. 
    If possible, show each part (with  an output) to a GTA, when complete. 
    Submit this quiz (to Blackboard) when complete, you may make multiple submissions. 

 5. You do not need to implement error handling, unless needed for this quiz,  (file already exists, empty files, etc) 
    but your program should not abnormally terminate (crash). The relevant data is in file pairs of the same base name,
    one is a photo of a food, the other is a small description which include (in the .csv file, in this order):
    The weight (in grams), the fat content, the number of calories
    The ingredients (seperated by commas)
    The type (genre) of this food

 6. + All the following implementation should be done on MS Azure.
    + All functionality should use a browser and web pages (or dynamically created content), 
    + and EACH page should have: 
           your name, class, and ID number at the top.

 7. + Upload the food pair data (anywhere on Azure) and then create a web page that shows part 6 and the pictures.
      Please show NAMES of pictures below each picture.
      You may do this manually or through a web interface.
    + There is no "user" concept, no login, all people using this service are "users".
    + Create a web interface that allows a (any) user to see the web page. Show the time and the time it takes to respond 
      to the load request.
   
 8. + using part 7, allow a user to query for all foods weighing between two values which we will supply,
      (for example, show pictures and names of all foods between 100 and 500 grams)
    + We wish to guarantee a QoS of at most 2 seconds from site/page request until that page is displayed. 
      Show how we can determine if that goal is met. (You do NOT need to meet that goal, just show whether you do or don't)
      show the performance of your application.
    + Give one method (explain or give code) where you allow a login and only allow those users to upload their own foods.

9. + allow a user to query for all foods with a specified ingredient. Show matching entries (pictures).
   + show top 5 requested ingredients.
   + show how a SQL injection would occur in your code, or explain why it could not.
   + show how one can find a "snack" (or other genre/type) with less than a specified number of calories.